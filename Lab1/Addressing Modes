;
; CS1022 Introduction to Computing II 2018/2019
; Lab 1 - Addressing Modes
;

N	EQU	10

	AREA	globals, DATA, READWRITE

; N word-size values

ARRAY	SPACE	N*4		; N words (4 bytes each)


	AREA	RESET, CODE, READONLY
	ENTRY

	; for convenience, let's initialise test array [0, 1, 2, ... , N-1]

	LDR	R0, =ARRAY
	LDR	R1, =0
L1	CMP	R1, #N
	BHS	L2
	STR	R1, [R0, R1, LSL #2]
	ADD	R1, R1, #1
	B	L1
L2

	; initialise registers for your program

	LDR	R0, =ARRAY	; array start address
	LDR	R1, =N		; size of array (half-words)

	; your program goes here
	; Q.1
	
	
	
;(a)	
	
;	MOV	R4, #0
;L3	CMP	R4, R1
;	BHS	L4
;	LDR	R5, [R0]
;	MOV	R6,	R5
;	MUL	R6, R5, R6
;	STR	R6, [R0]
;	ADD	R0, R0, #4		; offset
;	ADD	R4, R4, #1
;	B	L3
;L4

;(b)
	MOV 	R4, #0		; current position of array
	MOV 	R7, #0		; offset initiallized to 0 (dont really need this line,as R7 hasent been used so its already 0)
L5	CMP 	R4, R1		; size of array
	BHS 	L6	
	LDR	R5, [R0, R7]	; load the value of the array and increment to next position	
	MUL	R6, R5, R5	    ; squared
	STR	R6, [R0, R7]	; store back into array and increment to next position
	ADD	R7, R7, #4	    ; add two to offset (if word, add 4)
	ADD	R4, R4, #1	    ; add 1 to the counter of position of array 
	B   L5

;(c)
	MOV 	R4, #0				; current position of array
	MOV 	R7, #0				; offset initiallized to 0 (dont really need this line,as R7 hasent been used so its already 0)
L7	CMP 	R4, R1				; size of array
	BHS 	L8	
	LDR	R5, [R0, R7, LSL #2]	; load the value of the position of the array and increment to next position	
	MUL	R6, R5, R5				; squared
	STR	R6, [R0, R7, LSL #2]	; store back into array and increment to next position
	ADD	R7, R7, #1				; add two to offset (if word, add 4)
	ADD	R4, R4, #1				; add 1 to the counter of position of array 
	B	L7
L8

;(d)
;	MOV R4, #0
;L3	CMP	R4,	R1
;	BHS	L4
;	LDR R5,[R0]
;	MUL	R6,R5,R5
;	STR	R6,[R0],#4
;	ADD R4,R4,#1
;	B	L3
;L4
	
	


STOP	B	STOP

	END
